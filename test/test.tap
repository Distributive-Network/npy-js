#! /usr/bin/env node

const { test, equal, ok, isNot } = require('zora');
const child_process = require('child_process');
const { readNumpyFile, writeNumpyFile, buildDataArray } = require(__dirname + '/../src/index.js');

const randomSeed = Math.floor(Math.random() * 10000);


test('test python to js and back', t=>{
  t.test('test python write to npy', t=>{
    //spawn a python process to write to a randomly initialized numpy array 
    var result = child_process.spawnSync('python3',[__dirname + '/../python/SaveNumpy.py', randomSeed.toString()],{
      cwd: __dirname + '/../python/'
    });
    t.equal(result.status, 0);
  });


  t.test('read npy and write in js', t=>{
    var da = readNumpyFile(__dirname + '/../python/n.npy');
    var nda = buildDataArray(da.typedArray, da.shape);
    writeNumpyFile(__dirname + '/../python/o.npy', nda);
    t.isNot({}, da, 'data array is not empty');
    t.isNot({}, nda, 'built dataArray is not empty');
  });

  t.test('read js written npy file', t=>{
    //spawn a python process to read the o.npy file that was written and compare to a randomly initialized numpy array
    var result = child_process.spawnSync('python3', [__dirname + '/../python/ReadNumpy.py', randomSeed.toString()], {
      cwd: __dirname + '/../python/'
    });
    t.equal(result.status, 0);
  });
});
